import pandas as pd
import os

input_dir = r"C:\Users\yangk\OneDrive - National University of Singapore\P013 SmartSole\60. Verification testing\TEST-004\Sensor Data\MVN Awinda Reports"
ouput_dir = r"C:\Users\yangk\OneDrive - National University of Singapore\P013 SmartSole\60. Verification testing\TEST-004\Awinda Summerized.csv"
combined_trajectory_dfs = []


def clean_df():
    for report_file in os.listdir(input_dir):
        if report_file.endswith('.xlsx'):
            report_path = os.path.join(input_dir, report_file)
            Trajec_name = os.path.basename(report_file).split('.')[0].split('-')[0]

            df = pd.read_excel(report_path, sheet_name='parameters', header=1)
            df.set_index(df.columns[0], inplace=True)



        parameter_name = [
            "gait_velocity",
            "cadence",
            "steps",
            "duration",
            "distance",
            "step_length",
            "step_length",
            "stride_width",
            "stride_width",
            "stride_length",
            "stride_length",
            "stride_time",
            "stride_time",
            "swing_time",
            "swing_time",
            "stance_time",
            "stance_time",
            "ic_angle",
            "ic_angle",
            ]
            
        mean = []
        foot = ['bilateral'] * 5 + ['left' if i % 2 == 0 else 'right' for i in range(len(parameter_name) - 5)]
        

        sd = ['NaN']*5



        
        # Means
        mean.extend([
        df.loc['general.speed_in_m_per_sec.mean'].iloc[0],
        df.loc['general.cadence_in_step_per_min'].iloc[0],
        df.loc['general.num_of_steps'].iloc[0],
        df.loc['general.duration_in_sec'].iloc[0],
        df.loc['general.walking_window_distance_in_meters'].iloc[0],
        df.loc['spatial.step_length_in_cm.left.mean'].iloc[0],
        df.loc['spatial.step_length_in_cm.right.mean'].iloc[0],
        df.loc['spatial.step_width_in_cm.left.mean'].iloc[0],
        df.loc['spatial.step_width_in_cm.right.mean'].iloc[0],
        df.loc['spatial.stride_length_in_cm.left.mean'].iloc[0],
        df.loc['spatial.stride_length_in_cm.right.mean'].iloc[0],
        df.loc['temporal.gait_cycle_in_sec.left.mean'].iloc[0],
        df.loc['temporal.gait_cycle_in_sec.right.mean'].iloc[0],
        df.loc['temporal.swing_phase_in_sec.left.mean'].iloc[0],
        df.loc['temporal.swing_phase_in_sec.right.mean'].iloc[0],
        df.loc['temporal.stance_phase_in_sec.left.mean'].iloc[0],
        df.loc['temporal.stance_phase_in_sec.right.mean'].iloc[0],
        df.loc['joint_angles.ankle.left.overall.foot_strike.mean'].iloc[0],
        df.loc['joint_angles.ankle.right.overall.foot_strike.mean'].iloc[0],
        ])
        
        # SD
        
        sd.extend([
        df.loc['spatial.step_length_in_cm.left.std'].iloc[0],
        df.loc['spatial.step_length_in_cm.right.std'].iloc[0],
        df.loc['spatial.step_width_in_cm.left.std'].iloc[0],
        df.loc['spatial.step_width_in_cm.right.std'].iloc[0],
        df.loc['spatial.stride_length_in_cm.left.std'].iloc[0],
        df.loc['spatial.stride_length_in_cm.right.std'].iloc[0],
        df.loc['temporal.gait_cycle_in_sec.left.std'].iloc[0],
        df.loc['temporal.gait_cycle_in_sec.right.std'].iloc[0],
        df.loc['temporal.swing_phase_in_sec.left.std'].iloc[0],
        df.loc['temporal.swing_phase_in_sec.right.std'].iloc[0],
        df.loc['temporal.stance_phase_in_sec.left.std'].iloc[0],
        df.loc['temporal.stance_phase_in_sec.right.std'].iloc[0],
        df.loc['joint_angles.ankle.left.overall.foot_strike.std'].iloc[0],
        df.loc['joint_angles.ankle.right.overall.foot_strike.std'].iloc[0],
        ])

        print(len(foot))
        
        df_result = pd.DataFrame(list(zip(foot, parameter_name, mean, sd, )),
                        columns=['foot', 'parameter', 'mean', 'std' ])
        
     

        
         # Reshape the DataFrame
        df_per_trajec = pd.melt(df_result, id_vars=['foot', 'parameter'],
                            value_vars=['mean', 'std'],
                            var_name='Statistic', value_name='Value')
        
        # dfs_to_combine.append(df_result)
        df_per_trajec = df_per_trajec.rename(columns={'Value': f'{Trajec_name}'})
        # print(df_per_trajec)
                
        combined_trajectory_dfs.append(df_per_trajec)   
            
    # Combine all cleaned DataFrames vertically into one DataFrame for the current PDF

    if combined_trajectory_dfs:
        common_columns = combined_trajectory_dfs[0].iloc[:, :3]
        unique_columns = pd.concat([df.iloc[:, 3] for df in combined_trajectory_dfs], axis=1)
        semifinal_df = pd.concat([common_columns, unique_columns], axis=1)
    final_df = semifinal_df.T



    
    print(final_df)
    
    final_df.to_csv(ouput_dir)

    print(f"Data successfully processed and saved")
        
        
    
clean_df()

    